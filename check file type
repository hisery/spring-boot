public Map<String, Object> uploadImage(MultipartFile file) {
		Map<String, Object> result = new HashMap<String, Object>();
	
		if (file.isEmpty()) {
			result = ResultUtil.makeReturn(false, "upload failed, file is empty", null, ErrorCodeEnum.UPLOAD_FILE_IS_EMPTY.getCode());
			LOGGER.info("file is empty");
			return result;
		}
		// 判断文件后缀是否是jpg
		BufferedOutputStream out = null;
		try {
			InputStream is = file.getInputStream();
			ByteArrayOutputStream bytestream = new ByteArrayOutputStream();
			for (int i = 0; i < 10; i++) {
				int a = is.read();
				bytestream.write(a);
			}
			byte[] imgdata = bytestream.toByteArray();
			if (!getFileTypeByStream(imgdata)) {
				result = ResultUtil.makeReturn(false, "file not image", null, ErrorCodeEnum.UPLOAD_TYPE_NOT_DOC.getCode());
				LOGGER.info("file type not doc");
				return result;
			}

			String path = environment.getProperty(InitConfig.LOCAL_DOWNLOAD_KEY);
			String windowPath = environment.getProperty(InitConfig.WINDOWS_PATH);
			File sf = new File(path);
			if (!sf.exists()) {
				sf.mkdirs();
			}
			String uuid = UuidUtil.getUUID();
			File tempFile = new File(path + windowPath + uuid + ".doc");
			out = new BufferedOutputStream(new FileOutputStream(tempFile));
			out.write(file.getBytes());
			out.flush();
			out.close();
			result = ResultUtil.makeReturn(true, "", uuid, ErrorCodeEnum.SUCCESS.getCode());
		} catch (Exception e) {
			result = ResultUtil.makeReturn(false, "upload file error", null, ErrorCodeEnum.SYSTEM_ERROR.getCode());
			LOGGER.error("upload file error ...", e);
		} finally {
			try {
				if (out != null) {
					out.close();
				}
			} catch (Exception e) {
				LOGGER.error("close outputstream error ...", e);
			}
		}
		return result;
	}

	public boolean getFileTypeByStream(byte[] b) {
		String filetypeHex = String.valueOf(bytesToHexString(b));
		filetypeHex = filetypeHex.toUpperCase();
		if (filetypeHex.length() < 6) {
			return false;
		}
		filetypeHex = filetypeHex.substring(0, 6);
		LOGGER.info("file type ... type:{}", filetypeHex);
		boolean result = TypeDict.checkDocType(filetypeHex);
		return result;
	}

	public static String bytesToHexString(byte[] src) {
		StringBuilder stringBuilder = new StringBuilder();
		if (src == null || src.length <= 0) {
			return null;
		}
		for (int i = 0; i < src.length; i++) {
			int v = src[i] & 0xFF;
			String hv = Integer.toHexString(v);
			if (hv.length() < 2) {
				stringBuilder.append(0);
			}
			stringBuilder.append(hv);
		}
		return stringBuilder.toString();
	}
  
  public class TypeDict {
    /**
     常用文件的文件头如下：(以前六位为准)
     JPEG (jpg)，文件头：FFD8FF
     PNG (png)，文件头：89504E47
     GIF (gif)，文件头：47494638
     TIFF (tif)，文件头：49492A00
     Windows Bitmap (bmp)，文件头：424D
     CAD (dwg)，文件头：41433130
     Adobe Photoshop (psd)，文件头：38425053
     Rich Text Format (rtf)，文件头：7B5C727466
     XML (xml)，文件头：3C3F786D6C
     HTML (html)，文件头：68746D6C3E
     Email [thorough only] (eml)，文件头：44656C69766572792D646174653A
     Outlook Express (dbx)，文件头：CFAD12FEC5FD746F
     Outlook (pst)，文件头：2142444E
     MS Word/Excel (xls.or.doc)，文件头：D0CF11E0
     MS Access (mdb)，文件头：5374616E64617264204A
     WordPerfect (wpd)，文件头：FF575043
     Postscript (eps.or.ps)，文件头：252150532D41646F6265
     Adobe Acrobat (pdf)，文件头：255044462D312E
     Quicken (qdf)，文件头：AC9EBD8F
     Windows Password (pwl)，文件头：E3828596
     ZIP Archive (zip)，文件头：504B0304
     RAR Archive (rar)，文件头：52617221
     Wave (wav)，文件头：57415645
     AVI (avi)，文件头：41564920
     Real Audio (ram)，文件头：2E7261FD
     Real Media (rm)，文件头：2E524D46
     MPEG (mpg)，文件头：000001BA
     MPEG (mpg)，文件头：000001B3
     Quicktime (mov)，文件头：6D6F6F76
     Windows Media (asf)，文件头：3026B2758E66CF11
     MIDI (mid)，文件头：4D546864

     FILE_TYPE_MAP.put("ffd8ffe000104a464946", "jpg"); //JPEG (jpg)
     FILE_TYPE_MAP.put("89504e470d0a1a0a0000", "png"); //PNG (png)
     FILE_TYPE_MAP.put("47494638396126026f01", "gif"); //GIF (gif)
     FILE_TYPE_MAP.put("49492a00227105008037", "tif"); //TIFF (tif)
     FILE_TYPE_MAP.put("424d228c010000000000", "bmp"); //16色位图(bmp)
     FILE_TYPE_MAP.put("424d8240090000000000", "bmp"); //24位位图(bmp)
     FILE_TYPE_MAP.put("424d8e1b030000000000", "bmp"); //256色位图(bmp)
     FILE_TYPE_MAP.put("41433130313500000000", "dwg"); //CAD (dwg)
     FILE_TYPE_MAP.put("3c21444f435459504520", "html"); //HTML (html)
     FILE_TYPE_MAP.put("3c21646f637479706520", "htm"); //HTM (htm)
     FILE_TYPE_MAP.put("48544d4c207b0d0a0942", "css"); //css
     FILE_TYPE_MAP.put("696b2e71623d696b2e71", "js"); //js
     FILE_TYPE_MAP.put("7b5c727466315c616e73", "rtf"); //Rich Text Format (rtf)
     FILE_TYPE_MAP.put("38425053000100000000", "psd"); //Photoshop (psd)
     FILE_TYPE_MAP.put("46726f6d3a203d3f6762", "eml"); //Email [Outlook Express 6] (eml)
     FILE_TYPE_MAP.put("d0cf11e0a1b11ae10000", "doc"); //MS Excel 注意：word、msi 和 excel的文件头一样
     FILE_TYPE_MAP.put("d0cf11e0a1b11ae10000", "vsd"); //Visio 绘图
     FILE_TYPE_MAP.put("5374616E64617264204A", "mdb"); //MS Access (mdb)
     FILE_TYPE_MAP.put("252150532D41646F6265", "ps");
     FILE_TYPE_MAP.put("255044462d312e350d0a", "pdf"); //Adobe Acrobat (pdf)
     FILE_TYPE_MAP.put("2e524d46000000120001", "rmvb"); //rmvb/rm相同
     FILE_TYPE_MAP.put("464c5601050000000900", "flv"); //flv与f4v相同
     FILE_TYPE_MAP.put("00000020667479706d70", "mp4");
     FILE_TYPE_MAP.put("49443303000000002176", "mp3");
     FILE_TYPE_MAP.put("000001ba210001000180", "mpg"); //
     FILE_TYPE_MAP.put("3026b2758e66cf11a6d9", "wmv"); //wmv与asf相同
     FILE_TYPE_MAP.put("52494646e27807005741", "wav"); //Wave (wav)
     FILE_TYPE_MAP.put("52494646d07d60074156", "avi");
     FILE_TYPE_MAP.put("4d546864000000060001", "mid"); //MIDI (mid)
     FILE_TYPE_MAP.put("504b0304140000000800", "zip");
     FILE_TYPE_MAP.put("526172211a0700cf9073", "rar");
     FILE_TYPE_MAP.put("235468697320636f6e66", "ini");
     FILE_TYPE_MAP.put("504b03040a0000000000", "jar");
     FILE_TYPE_MAP.put("4d5a9000030000000400", "exe");//可执行文件
     FILE_TYPE_MAP.put("3c25402070616765206c", "jsp");//jsp文件
     FILE_TYPE_MAP.put("4d616e69666573742d56", "mf");//MF文件
     FILE_TYPE_MAP.put("3c3f786d6c2076657273", "xml");//xml文件
     FILE_TYPE_MAP.put("494e5345525420494e54", "sql");//xml文件
     FILE_TYPE_MAP.put("7061636b616765207765", "java");//java文件
     FILE_TYPE_MAP.put("406563686f206f66660d", "bat");//bat文件
     FILE_TYPE_MAP.put("1f8b0800000000000000", "gz");//gz文件
     FILE_TYPE_MAP.put("6c6f67346a2e726f6f74", "properties");//bat文件
     FILE_TYPE_MAP.put("cafebabe0000002e0041", "class");//bat文件
     FILE_TYPE_MAP.put("49545346030000006000", "chm");//bat文件
     FILE_TYPE_MAP.put("04000000010000001300", "mxp");//bat文件
     FILE_TYPE_MAP.put("504b0304140006000800", "docx");//docx文件
     FILE_TYPE_MAP.put("d0cf11e0a1b11ae10000", "wps");//WPS文字wps、表格et、演示dps都是一样的
     FILE_TYPE_MAP.put("6431303a637265617465", "torrent");


     FILE_TYPE_MAP.put("6D6F6F76", "mov"); //Quicktime (mov)
     FILE_TYPE_MAP.put("FF575043", "wpd"); //WordPerfect (wpd)
     FILE_TYPE_MAP.put("CFAD12FEC5FD746F", "dbx"); //Outlook Express (dbx)
     FILE_TYPE_MAP.put("2142444E", "pst"); //Outlook (pst)
     FILE_TYPE_MAP.put("AC9EBD8F", "qdf"); //Quicken (qdf)
     FILE_TYPE_MAP.put("E3828596", "pwl"); //Windows Password (pwl)
     FILE_TYPE_MAP.put("2E7261FD", "ram"); //Real Audio (ram)
     */
    public static boolean checkImageType(String fileType) {
        switch (fileType) {
            case "FFD8FF":
            case "89504E": return true;
            default: return false;
        }
    }

    public static boolean checkDocType(String fileType) {
        switch (fileType) {
            case "D0CF11":
            case "504B03": return true;
            default: return false;
        }
    }
}
