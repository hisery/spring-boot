import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.slf4j.MDC;
import org.springframework.stereotype.Component;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@Component
public class CommonRequestInterceptor extends HandlerInterceptorAdapter {

    private static final Logger LOGGER = LoggerFactory.getLogger(CommonRequestInterceptor.class);

    @Override
    public boolean preHandle(HttpServletRequest request,
                             HttpServletResponse response,
                             Object handler) throws Exception {

        HttpServletRequest requestWrapper = null;
        String requestId = RequestUtil.getRequestId(request);
        MDC.put(RequestUtil.REQUEST_ID_KEY, requestId);
        String requestBody = RequestWrapperUtil.getBodyString(request);
        if (requestBody != null) {
            if (requestBody.startsWith("{")) {
                LOGGER.info("=================> Request Info ============>>> " + JsonUtil.toJson(RequestUtil.getRequestInfoMap(request, JsonUtil.toMap(requestBody))));
            } else {
                LOGGER.info("=================> Request Info ============>>> " + JsonUtil.toJson(RequestUtil.getRequestInfoMap(request, requestBody)));
            }
        }
        return super.preHandle(request, response, handler);

    }

    @Override
    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {
        RequestUtil.requestIdThreadLocal.remove();
        super.afterCompletion(request, response, handler, ex);
    }
}
